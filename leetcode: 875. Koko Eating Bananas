//link: https://leetcode.com/problems/koko-eating-bananas/description/
class Solution {
    int CalculateTotalHours(int[] a,int hourly)
  {
    int totalH=0;
    int n=a.length;
    for(int i=0;i<n;i++)
    {
        totalH+=Math.ceil((double)a[i]/(double)hourly);
    }
    return totalH;
}
    public int minEatingSpeed(int[] piles, int h) {
         int low=1;
    int max = Integer.MIN_VALUE;
     for (int v : piles) if (v > max) max = v;
     int high=max;
   
    while(low<=high)
    {
        int mid=(low+high)/2;
        int totalH=CalculateTotalHours(piles,mid);
        if(totalH<=h){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
        
    }
    return low;
    }
}
