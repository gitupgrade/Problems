//link: https://leetcode.com/problems/search-a-2d-matrix/description/
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix.empty() ? 0 : matrix[0].size();
        int low = 0;
        int high = n - 1;
        int ans = -1;
        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (matrix[mid][m - 1] >=target) {
                ans = mid;
                high = mid - 1;
            }

            else {
                low = mid + 1;
            }
        }
        if (ans == -1) {
            return false;
        } else {
            low = 0;
            high = m - 1;
            while (low <= high) {
                int mid = low + (high - low) / 2;

                if (matrix[ans][mid] ==target) {
                    return true;

                }
                 else if(target>matrix[ans][mid])
                 {
                    low = mid + 1;
                }

                else {
                    high = mid - 1;
                }
            }
            return false;
        }
    }
};


            
