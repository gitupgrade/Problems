//link: https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/description/
class Solution {
public:
bool check(vector <int> a,int day,int m,int k)
{  int count=0;
int val=0;
    for(int i=0;i<a.size();i++)
    {
        if(a[i]<=day)
        {
            count=count+1;
        }
        else {
            val+=count/k;
            count=0;
            
        }
    }
    val+=count/k;
    if(val>=m)
    {
        return true;
    }
    else 
    {
        return false;
    }

}
int minDays(vector<int>& bloomDay, int m, int k) {
        long long val=m*1LL*k*1LL;
   
    if(val>bloomDay.size())
    {
        return -1;
    }
     auto mm = minmax_element(bloomDay.begin(), bloomDay.end()); 
   int low= *mm.first ;
   int high= *mm.second;
   while(low<=high)
   {int mid=(low+high)/2;
    if(check(bloomDay,mid,m,k))
    {
        high=mid-1;
    }
    else{
        low=mid+1;
    }
   }
   return low;

    }
};
